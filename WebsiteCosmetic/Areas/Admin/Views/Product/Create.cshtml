@model Models.Framework.Product
@{
    ViewBag.Title = "THÊM MỸ PHẨM";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.LineId, "Tên dòng", htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size:22px" })
        <div class="col-md-10">
            @Html.DropDownList("LineId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LineId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ProName,"Tên mỹ phẩm", htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size:22px" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ProName, new { htmlAttributes = new { @class = "form-control" }, @required = "", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description,"Mô tả", htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size:22px" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, id = "txtContent" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink("Huỷ", "Index", null, new { @class = "btn btn-danger", @style = "font-size:15px" })
            <button type="submit" class="btn btn-primary" style="font-size:15px"><i class=""></i> Save</button>
        </div>
    </div>
</div>
}
@section Script{
    <script>
        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/plugins/ckeditor/config.js',
        })
    </script>
}
